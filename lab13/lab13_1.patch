From 3cea2efc076f659503e243b51b57c5bee4123345 Mon Sep 17 00:00:00 2001
From: DrCookie <timothee.vanhove@heig-vd.ch>
Date: Tue, 9 Jan 2024 16:44:01 +0100
Subject: [PATCH] LRU seems to work

---
 usr/host/memreplace.c | 46 +++++++++++++++++++++++++++++++++++++------
 1 file changed, 40 insertions(+), 6 deletions(-)

diff --git a/usr/host/memreplace.c b/usr/host/memreplace.c
index d869121..e5de53f 100644
--- a/usr/host/memreplace.c
+++ b/usr/host/memreplace.c
@@ -25,10 +25,34 @@
 /* [1] = SWAP on 1 bit */
 /* [0] = Valid on 1 bit */
 uint8_t page_table[NB_PAGES] = {0};
+uint8_t tdu[NB_PAGES] = {0};
+uint8_t tvc = 0;
 
 
 void replaceLRU(void) {
-    // TO COMPLETE
+    int replace_index = -1;
+
+    // Iterate over all pages to find the least recently used one
+    for (size_t i = 0; i < NB_PAGES; ++i) {
+
+        // Skip pages that are not valid (not in memory)
+    	if (!(page_table[i] & VALID_BIT_MASK))
+            continue;
+
+        // Check if this is the first valid page we've found 
+        // or if it's been used less recently than the current candidate
+    	if (replace_index == -1 || tdu[i] < tdu[replace_index])
+            replace_index = i;
+    }
+
+    if (replace_index == -1) {
+        fprintf(stderr, "Error: no page to replace found\n");
+        exit(1);
+    }
+
+    // Mark the selected page as not valid and set the swap bit
+    page_table[replace_index] &= ~VALID_BIT_MASK;
+    page_table[replace_index] |= SWAP_BIT_MASK;
 }
 
 
@@ -37,7 +61,11 @@ void replaceWSC(void) {
 }
 
 void updateTDU(void) {
-    // TO COMPLETE
+    for (size_t i = 0; i < NB_PAGES; ++i) {
+        if (page_table[i] & REF_BIT_MASK & VALID_BIT_MASK) {
+            tdu[i] = tvc;
+        }
+    }
 }
 
 void init_page_table(void) {
@@ -121,10 +149,16 @@ int main(int argc, char *argv[]) {
             if (page_no >= 0 && page_no < NB_PAGES) {
                 if (LRU_run) {
                     /* LRU Related */
-                    if (!(page_table[page_no] & VALID_BIT_MASK)) /* VALID = 0 ? */
-                        replaceLRU();
-                    
-                    // TO COMPLETE
+                    if (!(page_table[page_no] & VALID_BIT_MASK)) {
+						replaceLRU();
+						page_table[page_no] &= ~SWAP_BIT_MASK;
+						page_table[page_no] |= VALID_BIT_MASK;
+					}
+
+                    //Increment TVC
+                    if (page_no >= 0 && page_no < NB_PAGES) {
+                        tdu[page_no] = ++tvc;
+                    }
                 }
                 else {
                     /* WSC Related */
-- 
GitLab

