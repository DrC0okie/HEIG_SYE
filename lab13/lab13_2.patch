From 5b7b30d6b39cbcdbbde4932729429395a9c8cb4c Mon Sep 17 00:00:00 2001
From: DrCookie <timothee.vanhove@heig-vd.ch>
Date: Tue, 16 Jan 2024 17:09:30 +0100
Subject: [PATCH] End of lab 13

---
 usr/host/memreplace.c | 67 ++++++++++++++++++++++++++++++++-----------
 1 file changed, 51 insertions(+), 16 deletions(-)

diff --git a/usr/host/memreplace.c b/usr/host/memreplace.c
index e5de53f..1b47717 100644
--- a/usr/host/memreplace.c
+++ b/usr/host/memreplace.c
@@ -33,7 +33,7 @@ void replaceLRU(void) {
     int replace_index = -1;
 
     // Iterate over all pages to find the least recently used one
-    for (size_t i = 0; i < NB_PAGES; ++i) {
+    for (size_t i = 0; i < NB_PAGES; i++) {
 
         // Skip pages that are not valid (not in memory)
     	if (!(page_table[i] & VALID_BIT_MASK))
@@ -55,17 +55,51 @@ void replaceLRU(void) {
     page_table[replace_index] |= SWAP_BIT_MASK;
 }
 
+void incCompteur(int page_no) {
+    // Mise à jour du TDU pour la page donnée
+    if(page_no < 0 && page_no >= NB_PAGES) {
+        printf("Invalid page : %d\n", page_no);
+        return;
+    }
+
+    tdu[page_no] = ++tvc;
+}
 
 void replaceWSC(void) {
-    // TO COMPLETE
+    int replace_index = -1;
+    for (size_t i = 0; i < NB_PAGES; i++) {
+
+        // Skip pages that are not valid
+        if (!(page_table[i] & VALID_BIT_MASK))
+            continue;
+
+        // Check if this is the first valid page we've found
+        if (replace_index == -1)
+            replace_index = i;
+
+        // Check if the page has been referenced
+        if(page_table[i] & REF_BIT_MASK) {
+            page_table[i] &= ~REF_BIT_MASK;
+        } else if (tvc - tdu[i] > DELTA){
+            replace_index = i;
+            break; // We found a page to replace
+        }
+    }
+
+    // If no page has been found, we need to reset the reference bit
+    if (replace_index == -1) {
+        fprintf(stderr, "Error: no page to replace found\n");
+        return;
+    }
+
+    page_table[replace_index] &= ~VALID_BIT_MASK;
+    page_table[replace_index] |= SWAP_BIT_MASK;
 }
 
 void updateTDU(void) {
-    for (size_t i = 0; i < NB_PAGES; ++i) {
-        if (page_table[i] & REF_BIT_MASK & VALID_BIT_MASK) {
+    for (size_t i = 0; i < NB_PAGES; i++) 
+        if (page_table[i] & REF_BIT_MASK & VALID_BIT_MASK) 
             tdu[i] = tvc;
-        }
-    }
 }
 
 void init_page_table(void) {
@@ -151,23 +185,24 @@ int main(int argc, char *argv[]) {
                     /* LRU Related */
                     if (!(page_table[page_no] & VALID_BIT_MASK)) {
 						replaceLRU();
-						page_table[page_no] &= ~SWAP_BIT_MASK;
 						page_table[page_no] |= VALID_BIT_MASK;
+						page_table[page_no] &= ~SWAP_BIT_MASK;
 					}
 
-                    //Increment TVC
-                    if (page_no >= 0 && page_no < NB_PAGES) {
-                        tdu[page_no] = ++tvc;
-                    }
-                }
-                else {
+                    incCompteur(page_no);
+                } else {
                     /* WSC Related */
-                    if (!(page_table[page_no] & VALID_BIT_MASK)) /* VALID = 0 ? */
+                    if (!(page_table[page_no] & VALID_BIT_MASK)){
                         replaceWSC();
+                        page_table[page_no] &= ~SWAP_BIT_MASK;
+                    }
 
-                    // TO COMPLETE
-                }
+					page_table[page_no] |= VALID_BIT_MASK;
+					page_table[page_no] |= REF_BIT_MASK;
 
+                    tvc++;
+                    updateTDU();
+                }
                 print_memory();
             }
             else
-- 
GitLab

